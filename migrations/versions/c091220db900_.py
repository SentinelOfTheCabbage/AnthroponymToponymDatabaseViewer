"""empty message

Revision ID: c091220db900
Revises: 
Create Date: 2022-11-14 12:51:32.392758

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c091220db900'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anthroponym',
    sa.Column('anthroponym_id', sa.BIGINT(), nullable=False),
    sa.Column('anthroponym', sa.VARCHAR(length=512), nullable=True),
    sa.Column('original', sa.VARCHAR(length=512), nullable=False),
    sa.Column('transcription', sa.VARCHAR(length=512), nullable=False),
    sa.Column('source', sa.VARCHAR(length=512), nullable=False),
    sa.Column('comments', sa.VARCHAR(length=512), nullable=True),
    sa.Column('century', sa.NUMERIC(), nullable=False),
    sa.PrimaryKeyConstraint('anthroponym_id'),
    sa.UniqueConstraint('anthroponym'),
    sa.UniqueConstraint('original'),
    sa.UniqueConstraint('source'),
    sa.UniqueConstraint('transcription')
    )
    op.create_table('literature',
    sa.Column('literature_id', sa.BIGINT(), nullable=False),
    sa.Column('author', sa.VARCHAR(length=512), nullable=False),
    sa.Column('title', sa.VARCHAR(length=512), nullable=False),
    sa.Column('published_at', sa.SMALLINT(), nullable=False),
    sa.PrimaryKeyConstraint('literature_id'),
    sa.UniqueConstraint('author'),
    sa.UniqueConstraint('literature_id'),
    sa.UniqueConstraint('published_at'),
    sa.UniqueConstraint('title')
    )
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('description', sa.VARCHAR(length=511), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('toponym',
    sa.Column('toponym_id', sa.BIGINT(), nullable=False),
    sa.Column('toponym', sa.VARCHAR(length=512), nullable=True),
    sa.Column('original', sa.VARCHAR(length=512), nullable=False),
    sa.Column('transcription', sa.VARCHAR(length=512), nullable=False),
    sa.Column('source', sa.VARCHAR(length=512), nullable=False),
    sa.Column('comments', sa.VARCHAR(length=512), nullable=True),
    sa.Column('century', sa.NUMERIC(), nullable=False),
    sa.PrimaryKeyConstraint('toponym_id'),
    sa.UniqueConstraint('original'),
    sa.UniqueConstraint('source'),
    sa.UniqueConstraint('toponym'),
    sa.UniqueConstraint('transcription')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), nullable=True),
    sa.Column('password', sa.VARCHAR(length=100), nullable=True),
    sa.Column('active', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('anthroponym_image',
    sa.Column('anthroponym_id', sa.BIGINT(), nullable=True),
    sa.Column('img', sa.VARCHAR(length=50), nullable=False),
    sa.ForeignKeyConstraint(['anthroponym_id'], ['anthroponym.anthroponym_id'], )
    )
    op.create_table('anthroponym_reference',
    sa.Column('literature_id', sa.BIGINT(), nullable=False),
    sa.Column('anthroponym_id', sa.BIGINT(), nullable=False),
    sa.Column('pages', sa.VARCHAR(length=100), nullable=False),
    sa.ForeignKeyConstraint(['anthroponym_id'], ['anthroponym.anthroponym_id'], ),
    sa.ForeignKeyConstraint(['literature_id'], ['literature.literature_id'], )
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('toponym_image',
    sa.Column('toponym_id', sa.BIGINT(), nullable=True),
    sa.Column('img', sa.VARCHAR(length=50), nullable=False),
    sa.ForeignKeyConstraint(['toponym_id'], ['toponym.toponym_id'], )
    )
    op.create_table('toponym_reference',
    sa.Column('literature_id', sa.BIGINT(), nullable=False),
    sa.Column('toponym_id', sa.BIGINT(), nullable=False),
    sa.Column('pages', sa.VARCHAR(length=100), nullable=False),
    sa.ForeignKeyConstraint(['literature_id'], ['literature.literature_id'], ),
    sa.ForeignKeyConstraint(['toponym_id'], ['toponym.toponym_id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('toponym_reference')
    op.drop_table('toponym_image')
    op.drop_table('roles_users')
    op.drop_table('anthroponym_reference')
    op.drop_table('anthroponym_image')
    op.drop_table('user')
    op.drop_table('toponym')
    op.drop_table('role')
    op.drop_table('literature')
    op.drop_table('anthroponym')
    # ### end Alembic commands ###
